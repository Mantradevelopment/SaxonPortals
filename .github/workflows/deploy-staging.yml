name: Deploying Application

on:
  push:
    branches:
      - master
    paths:
      - 'ops/playbook/inventory/.trigger-deploy-staging'


jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8

          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --exclude .git,__pycache__,venv --show-source --statistics

          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --exit-zero --count --max-complexity=10 --exclude .git,__pycache__,venv --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pip install pytest-flask
          BACKEND_ENV=test py.test -v

  deploy-to-staging:
    runs-on: ubuntu-latest
    needs: [verify]
    steps:
      - uses: actions/checkout@v2
      - name: Deploying application
        uses: saubermacherag/ansible-playbook-docker-action@v1.3
        with:
          playbookName: ./ops/playbook/deploy.yaml
          inventoryFile: ./ops/playbook/inventory/staging
          keyFile: ./ops/ssh/prod_deploy_private_key
          keyFileVaultPass: ${{ secrets.ANSIBLE_VAULT_SECRET }}
          extraVars: "-e git_version=${{ github.sha }} -e git_actor=${{ github.actor }}"
          extraFile: ./ops/playbook/vars/staging.yaml
          verbosity: "vv"
